install.packages(c("lubridate", "ggsurvfit", "gtsummary", "tidycmprsk"))
library(lubridate)
library(ggsurvfit)
library(gtsummary)
#install.packages(c("lubridate", "ggsurvfit", "gtsummary", "tidycmprsk"))
# Install packages if needed
install.packages(c("knitr", "dplyr", "survival", "ggplot2", "here", "tibble"))
library(knitr)
install.packages("xfun")
install.packages("knitr")
library(knitr)
Rtools
writeLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${RTOOLS44_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.getenv("PATH")
install.packages("xfun", type = "source")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
install.packages("xfun", type = "source")
# Install xfun from source
install.packages("xfun", type = "source")
# Install knitr
install.packages("knitr")
library(readr)
Montipora_capitata_HIv3_genes_fixed <- read_delim("Multistage_Omics/Mapping/M_capitata/Montipora_capitata_HIv3.genes_fixed.gff3",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(Montipora_capitata_HIv3_genes_fixed)
library(readr)
Pocillopora_acuta_HIv2_genes_gff3 <- read_delim("C:/Users/amurgueitio/Downloads/Pocillopora_acuta_HIv2.genes.gff3.gz",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(Pocillopora_acuta_HIv2_genes_gff3)
# Set working directory
setwd("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups")
# Load required packages
library(data.table)
install.packages("data.table")
# Load required packages
library(data.table)
# Load required packages
library(data.table)
install.packages("data.table")
install.packages("data.table", type = "binary")
# Load required packages
library(data.table)
library(VennDiagram)
install.packages("VennDiagram")
library(VennDiagram)
# Read in data
x <- fread("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups/Orthogroups.tsv")
# Find all rows for which each species has at least one gene present in the orthogroup
Montipora_capitata_HIv3.genes.pep <- x[Montipora_capitata_HIv3.genes.pep > 0]
View(Montipora_capitata_HIv3.genes.pep)
View(x)
Pocillopora_acuta_HIv2.genes.pep <- x[Pocillopora_acuta_HIv2.genes.pep > 0]
Spis.genome.annotation.pep.longest <- x[Spis.genome.annotation.pep.longest > 0]
# Get the orthogroup IDS for each species.
Montipora_capitata_HIv3.genes.pep_orthogroups <- Montipora_capitata_HIv3.genes.pep$Orthogroup
Pocillopora_acuta_HIv2.genes.pep_orthogroups <- Pocillopora_acuta_HIv2.genes.pep$Orthogroup
Spis.genome.annotation.pep.longest_orthogroups <- Spis.genome.annotation.pep.longest$Orthogroup
# Save data
save(Montipora_capitata_HIv3.genes.pep_orthogroups, Pocillopora_acuta_HIv2.genes.pep_orthogroups, Spis.genome.annotation.pep.longest_orthogroups, file="orthogroup_names_for_venn_diagram_update_trial.Rdata")
colors= c("hotpink1", "darkmagenta", "cyan4")
# Load the necessary library
library(VennDiagram)
# Define the orthogroup data for the three species
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_HIv3.genes.pep_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_HIv2.genes.pep_orthogroups,
Spis = Spis.genome.annotation.pep.longest_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(19999))),
expression(atop(italic("Pocillopora acuta"), plain(18372))),
expression(atop(italic("Stylophora pistillata"), plain(16043)))
),
filename = "venn_diagram_coral_species.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
#Another version with numbers and bigger circles
colors = c("hotpink1", "darkmagenta", "cyan4")
# Ensure the input data for orthogroups are treated as lists
Montipora_capitata_orthogroups <- unique(Montipora_capitata_HIv3.genes.pep_orthogroups)
Pocillopora_acuta_orthogroups <- unique(Pocillopora_acuta_HIv2.genes.pep_orthogroups)
Stylophora_pistillata_orthogroups <- unique(Spis.genome.annotation.pep.longest_orthogroups)
# Check lengths
length_Montipora <- length(Montipora_capitata_orthogroups)
length_Pocillopora <- length(Pocillopora_acuta_orthogroups)
length_Stylophora <- length(Stylophora_pistillata_orthogroups)
# Generate the Venn diagram
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_orthogroups,
Stylophora_pistillata = Stylophora_pistillata_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(format(length_Montipora, big.mark = ",")))),
expression(atop(italic("Pocillopora acuta"), plain(format(length_Pocillopora, big.mark = ",")))),
expression(atop(italic("Stylophora pistillata"), plain(format(length_Stylophora, big.mark = ","))))
),
filename = "venn_diagram_mod.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
str(Montipora_capitata_HIv3.genes.pep_orthogroups)
str(Pocillopora_acuta_HIv2.genes.pep_orthogroups)
str(Spis.genome.annotation.pep.longest_orthogroups)
# Define the orthogroup data for the three species
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_HIv3.genes.pep_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_HIv2.genes.pep_orthogroups,
Spis = Spis.genome.annotation.pep.longest_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(8,909))),
expression(atop(italic("Pocillopora acuta"), plain(8,632))),
expression(atop(italic("Stylophora pistillata"), plain(7,7734)))
),
filename = "venn_diagram_coral_species.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
#Another version with numbers and bigger circles
colors = c("hotpink1", "darkmagenta", "cyan4")
# Ensure the input data for orthogroups are treated as lists
Montipora_capitata_orthogroups <- unique(Montipora_capitata_HIv3.genes.pep_orthogroups)
Pocillopora_acuta_orthogroups <- unique(Pocillopora_acuta_HIv2.genes.pep_orthogroups)
Stylophora_pistillata_orthogroups <- unique(Spis.genome.annotation.pep.longest_orthogroups)
# Check lengths
length_Montipora <- length(Montipora_capitata_orthogroups)
length_Pocillopora <- length(Pocillopora_acuta_orthogroups)
length_Stylophora <- length(Stylophora_pistillata_orthogroups)
# Generate the Venn diagram
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_orthogroups,
Stylophora_pistillata = Stylophora_pistillata_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(format(length_Montipora, big.mark = ",")))),
expression(atop(italic("Pocillopora acuta"), plain(format(length_Pocillopora, big.mark = ",")))),
expression(atop(italic("Stylophora pistillata"), plain(format(length_Stylophora, big.mark = ","))))
),
filename = "venn_diagram_mod.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
str(Montipora_capitata_HIv3.genes.pep_orthogroups)
str(Pocillopora_acuta_HIv2.genes.pep_orthogroups)
str(Spis.genome.annotation.pep.longest_orthogroups)
# Define the orthogroup data for the three species
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_HIv3.genes.pep_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_HIv2.genes.pep_orthogroups,
Spis = Spis.genome.annotation.pep.longest_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(8.909))),
expression(atop(italic("Pocillopora acuta"), plain(8.632))),
expression(atop(italic("Stylophora pistillata"), plain(7.734)))
),
filename = "venn_diagram_coral_species.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
#Another version with numbers and bigger circles
colors = c("hotpink1", "darkmagenta", "cyan4")
# Ensure the input data for orthogroups are treated as lists
Montipora_capitata_orthogroups <- unique(Montipora_capitata_HIv3.genes.pep_orthogroups)
Pocillopora_acuta_orthogroups <- unique(Pocillopora_acuta_HIv2.genes.pep_orthogroups)
Stylophora_pistillata_orthogroups <- unique(Spis.genome.annotation.pep.longest_orthogroups)
# Check lengths
length_Montipora <- length(Montipora_capitata_orthogroups)
length_Pocillopora <- length(Pocillopora_acuta_orthogroups)
length_Stylophora <- length(Stylophora_pistillata_orthogroups)
# Generate the Venn diagram
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_orthogroups,
Stylophora_pistillata = Stylophora_pistillata_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(format(length_Montipora, big.mark = ",")))),
expression(atop(italic("Pocillopora acuta"), plain(format(length_Pocillopora, big.mark = ",")))),
expression(atop(italic("Stylophora pistillata"), plain(format(length_Stylophora, big.mark = ","))))
),
filename = "venn_diagram_mod.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
# Set working directory
setwd("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups")
# Install required packages if not already installed
if (!require("data.table")) install.packages("data.table")
if (!require("VennDiagram")) install.packages("VennDiagram")
# Load required packages
library(data.table)
library(VennDiagram)
# Read in data
x <- fread("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups/Orthogroups.tsv")
# Subset for genes present in each species
Montipora_capitata_HIv3.genes.pep <- x[Montipora_capitata_HIv3.genes.pep > 0]
Pocillopora_acuta_HIv2.genes.pep <- x[Pocillopora_acuta_HIv2.genes.pep > 0]
Spis.genome.annotation.pep.longest <- x[Spis.genome.annotation.pep.longest > 0]
# Get unique orthogroups for each species
Montipora_capitata_orthogroups <- unique(Montipora_capitata_HIv3.genes.pep$Orthogroup)
Pocillopora_acuta_orthogroups <- unique(Pocillopora_acuta_HIv2.genes.pep$Orthogroup)
Stylophora_pistillata_orthogroups <- unique(Spis.genome.annotation.pep.longest$Orthogroup)
# Find single-copy orthogroups (appear in exactly one orthogroup for each species)
single_copy_orthogroups <- intersect(Montipora_capitata_orthogroups, Pocillopora_acuta_orthogroups)
single_copy_orthogroups <- intersect(single_copy_orthogroups, Stylophora_pistillata_orthogroups)
# Print the result for verification
print(length(single_copy_orthogroups))
# Visualize the results with a Venn diagram
colors <- c("hotpink1", "darkmagenta", "cyan4")
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_orthogroups,
Stylophora_pistillata = Stylophora_pistillata_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(length(Montipora_capitata_orthogroups)))),
expression(atop(italic("Pocillopora acuta"), plain(length(Pocillopora_acuta_orthogroups)))),
expression(atop(italic("Stylophora pistillata"), plain(length(Stylophora_pistillata_orthogroups))))
),
filename = "venn_diagram_single_copy_orthogroups.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
# Install required packages if not already installed
if (!require("data.table")) install.packages("data.table")
if (!require("VennDiagram")) install.packages("VennDiagram")
# Load required packages
library(data.table)
library(VennDiagram)
# Read in data
x <- fread("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups/Orthogroups.tsv")
# Subset for genes present in each species
Montipora_capitata_HIv3.genes.pep <- x[Montipora_capitata_HIv3.genes.pep > 0]
Pocillopora_acuta_HIv2.genes.pep <- x[Pocillopora_acuta_HIv2.genes.pep > 0]
Spis.genome.annotation.pep.longest <- x[Spis.genome.annotation.pep.longest > 0]
# Get unique orthogroups for each species
Montipora_capitata_orthogroups <- unique(Montipora_capitata_HIv3.genes.pep$Orthogroup)
Pocillopora_acuta_orthogroups <- unique(Pocillopora_acuta_HIv2.genes.pep$Orthogroup)
Stylophora_pistillata_orthogroups <- unique(Spis.genome.annotation.pep.longest$Orthogroup)
# Find single-copy orthogroups (appear in exactly one orthogroup for each species)
single_copy_orthogroups <- intersect(Montipora_capitata_orthogroups, Pocillopora_acuta_orthogroups)
single_copy_orthogroups <- intersect(single_copy_orthogroups, Stylophora_pistillata_orthogroups)
# Save the single-copy orthogroups
save(single_copy_orthogroups, file = "single_copy_orthogroups.Rdata")
# Print the result for verification
print(length(single_copy_orthogroups))
# Visualize the results with a Venn diagram
colors <- c("hotpink1", "darkmagenta", "cyan4")
venn.diagram(
x = list(
Montipora_capitata = Montipora_capitata_orthogroups,
Pocillopora_acuta = Pocillopora_acuta_orthogroups,
Stylophora_pistillata = Stylophora_pistillata_orthogroups
),
category.names = c(
expression(atop(italic("Montipora capitata"), plain(length(Montipora_capitata_orthogroups)))),
expression(atop(italic("Pocillopora acuta"), plain(length(Pocillopora_acuta_orthogroups)))),
expression(atop(italic("Stylophora pistillata"), plain(length(Stylophora_pistillata_orthogroups))))
),
filename = "venn_diagram_single_copy_orthogroups.png",
output = TRUE,
imagetype = "png",
scaled = FALSE,
col = "black",
fill = colors,
cat.col = colors,
cat.cex = 0.95,
cat.dist = 0.35,
margin = 0.30,
euler.d = FALSE
)
# Read in data
x <- fread("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups/Orthogroups.tsv")
# Subset for genes present in each species
Montipora_capitata_HIv3.genes.pep <- x[Montipora_capitata_HIv3.genes.pep > 0]
Pocillopora_acuta_HIv2.genes.pep <- x[Pocillopora_acuta_HIv2.genes.pep > 0]
Spis.genome.annotation.pep.longest <- x[Spis.genome.annotation.pep.longest > 0]
# Get unique orthogroups for each species
Montipora_capitata_orthogroups <- unique(Montipora_capitata_HIv3.genes.pep$Orthogroup)
# Set working directory
setwd("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups")
# Load required packages
library(data.table)
# Read in data
x <- fread("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups/Orthogroups.tsv")
# Subset for genes present in each species
Montipora_capitata_HIv3.genes.pep <- x[Montipora_capitata_HIv3.genes.pep > 0]
Pocillopora_acuta_HIv2.genes.pep <- x[Pocillopora_acuta_HIv2.genes.pep > 0]
Spis.genome.annotation.pep.longest <- x[Spis.genome.annotation.pep.longest > 0]
# Get orthogroups where the gene appears exactly once in each species
single_copy_Montipora <- Montipora_capitata_HIv3.genes.pep[,.N, by=Orthogroup][N == 1]$Orthogroup
single_copy_Pocillopora <- Pocillopora_acuta_HIv2.genes.pep[,.N, by=Orthogroup][N == 1]$Orthogroup
single_copy_Spis <- Spis.genome.annotation.pep.longest[,.N, by=Orthogroup][N == 1]$Orthogroup
# Find the intersection of the single-copy orthogroups across all species
single_copy_orthogroups <- Reduce(intersect, list(single_copy_Montipora, single_copy_Pocillopora, single_copy_Spis))
# Print the single-copy orthogroups
print(single_copy_orthogroups)
print(length(single_copy_orthogroups))
# Count occurrences of orthogroups in each species
count_Montipora <- Montipora_capitata_HIv3.genes.pep[, .N, by = Orthogroup]
# Set working directory
setwd("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups")
# Install required packages if not already installed
if (!require("data.table")) install.packages("data.table")
# Load required packages
library(data.table)
# Read in data
x <- fread("C:/Users/amurgueitio/Documents/Multistage_Omics/Orthogroups/Orthogroups.tsv")
# Subset for genes present in each species
Montipora_capitata_HIv3.genes.pep <- x[Montipora_capitata_HIv3.genes.pep > 0]
Pocillopora_acuta_HIv2.genes.pep <- x[Pocillopora_acuta_HIv2.genes.pep > 0]
Spis.genome.annotation.pep.longest <- x[Spis.genome.annotation.pep.longest > 0]
# Count occurrences of orthogroups in each species
count_Montipora <- Montipora_capitata_HIv3.genes.pep[, .N, by = Orthogroup]
count_Pocillopora <- Pocillopora_acuta_HIv2.genes.pep[, .N, by = Orthogroup]
count_Spis <- Spis.genome.annotation.pep.longest[, .N, by = Orthogroup]
View(count_Spis)
View(x)
# Load necessary libraries
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
# Load necessary libraries
library(tidyverse)
# Load the Orthogroups.tsv file
orthogroups <- read.delim("Orthogroups.tsv", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# Specify the columns for the species of interest
species <- c("Montipora_capitata_HIv3", "Pocillopora_acuta_HIv2", "Spis")
# Filter single-copy orthogroups
single_copy <- orthogroups %>%
filter(
rowSums(!is.na(select(., all_of(species)))) == length(species), # Ensure all three species have data
rowSums(str_count(select(., all_of(species)), ",") + 1) == length(species) # Ensure single-copy per species
)
rlang::last_trace()
View(orthogroups)
# Load necessary libraries
library(tidyverse)
# Define species columns
species <- c(
"Montipora_capitata_HIv3.genes.pep",
"Pocillopora_acuta_HIv2.genes.pep",
"Spis.genome.annotation.pep.longest"
)
# Filter single-copy orthogroups
single_copy <- orthogroups %>%
filter(
rowSums(!is.na(select(., all_of(species)))) == length(species), # Ensure all three species have data
rowSums(str_count(select(., all_of(species)), ",") + 1) == length(species) # Ensure single-copy per species
)
rlang::last_trace()
test_selection <- orthogroups %>% select(all_of(species))
str(test_selection)
# Ensure the `stringr` package is loaded
library(stringr)
# Filter single-copy orthogroups
single_copy <- orthogroups %>%
filter(
# Ensure all species have non-NA data
rowSums(!is.na(select(., all_of(species)))) == length(species),
# Ensure single-copy orthogroups for each species
rowSums(select(., all_of(species)) %>%
mutate(across(everything(), ~ str_count(., ",") == 0))) == length(species)
)
# View the filtered data
head(single_copy)
# View the filtered data
head(single_copy)
View(single_copy)
# Define species columns
species <- c(
"Montipora_capitata_HIv3.genes.pep",
"Pocillopora_acuta_HIv2.genes.pep",
"Spis.genome.annotation.pep.longest"
)
# Ensure the `stringr` package is loaded
library(stringr)
# Load the Orthogroups.tsv file
orthogroups <- read.delim("Orthogroups.tsv", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
library(dplyr)
library(stringr)
# Step 1: Clean and split genes for each species
cleaned_orthogroups <- orthogroups %>%
mutate(
Montipora_clean = str_split(Montipora_capitata_HIv3.genes.pep, ",\\s*"),
Pocillopora_clean = str_split(Pocillopora_acuta_HIv2.genes.pep, ",\\s*"),
Spis_clean = str_split(Spis.genome.annotation.pep.longest, ",\\s*")
)
View(cleaned_orthogroups)
# Step 2: Filter rows where each species has exactly one gene
single_copy <- cleaned_orthogroups %>%
filter(
lengths(Montipora_clean) == 1, # Only one gene for Montipora
lengths(Pocillopora_clean) == 1, # Only one gene for Pocillopora
lengths(Spis_clean) == 1        # Only one gene for Spis
)
View(single_copy)
# Step 3: Extract single-copy genes into new columns
single_copy <- single_copy %>%
mutate(
Montipora_gene = sapply(Montipora_clean, `[`, 1),
Pocillopora_gene = sapply(Pocillopora_clean, `[`, 1),
Spis_gene = sapply(Spis_clean, `[`, 1)
) %>%
select(Orthogroup, Montipora_gene, Pocillopora_gene, Spis_gene) # Select only relevant columns
View(single_copy)
single_copy <- single_copy %>%
mutate(
Montipora_gene = sapply(Montipora_clean, `[`, 1),
Pocillopora_gene = sapply(Pocillopora_clean, `[`, 1),
Spis_gene = sapply(Spis_clean, `[`, 1)
) %>%
select(Orthogroup, Montipora_gene, Pocillopora_gene, Spis_gene) # Select only relevant columns
View(single_copy)
# Step 4: Save the filtered single-copy orthogroups to a file
write.table(single_copy, "Single_Copy_Orthogroups.tsv", sep = "\t", quote = FALSE, row.names = FALSE)
# Print a summary of the results
cat("Filtered single-copy orthogroups:\n")
print(single_copy)
cat("\nNumber of single-copy orthogroups:", nrow(single_copy), "\n")
View(single_copy)
# Remove rows where any gene column has an empty value
filtered_single_copy <- single_copy %>%
filter(
!is.na(Montipora_gene) & Montipora_gene != "",
!is.na(Pocillopora_gene) & Pocillopora_gene != "",
!is.na(Spis_gene) & Spis_gene != ""
)
View(filtered_single_copy)
# Save the cleaned dataset
write.table(filtered_single_copy, "Cleaned_Single_Copy_Orthogroups.tsv", sep = "\t", quote = FALSE, row.names = FALSE)
# Print a summary of the cleaned data
cat("Cleaned single-copy orthogroups:\n")
print(filtered_single_copy)
cat("\nNumber of cleaned single-copy orthogroups:", nrow(filtered_single_copy), "\n")
# Save just the orthogroup names to a text file
writeLines(filtered_single_copy$Orthogroup, "Single_Copy_Orthogroups.txt")
# Print a summary
cat("Cleaned single-copy orthogroups dataset saved as 'Cleaned_Single_Copy_Orthogroups.tsv'\n")
cat("Orthogroup names saved as 'Single_Copy_Orthogroups.txt'\n")
cat("\nNumber of cleaned single-copy orthogroups:", nrow(filtered_single_copy), "\n")
